heat_template_version: 2013-05-23

description: |
  Heat template to deploy a single server running a PHP app under apache

parameter_groups:

- label: Server Settings
  parameters:
  - image
  - flavor

- label: PHP Application Settings
  parameters:
  - url
  - revision
  - packages
  - repo
  - deploy_key
  - destination
  - public

- label: rax-dev-params
  parameters:
  - server_hostname
  - http_port
  - https_port
  - memcached_size

parameters:

  parent_stack_id:
    description: ID of the parent stack for meta tags
    type: string
    default: "None"

  ssh_keypair_name:
    description: ssh_key resource from parent
    type: string
    default: "None"

  server_hostname:
    label: Server Name
    description: Server Name
    type: string
    default: php
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  image:
    label: Operating System
    description: |
      Required: Server image used for all servers that are created as a part of
      this deployment.
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
    constraints:
    - allowed_values:
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
      description: Must be a supported operating system.

  flavor:
    label: Server Size
    description: |
      Required: Rackspace Cloud Server flavor to use. The size is based on the
      amount of RAM for the provisioned server.
    type: string
    default: 4 GB General Purpose v1
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - 15 GB I/O v1
      - 30 GB I/O v1
      - 512MB Standard Instance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  revision:
    label: Revision
    description: |
      Optional: Git Branch/Ref to deploy. Default: HEAD
    type: string
    default: HEAD

  packages:
    label: System Packages
    description: |
      Optional: Additional system packages to install. Must be formatted as
      as a python list: ['package1', 'package2', 'etc']
    type: string
    default: ''

  repo:
    label: Git Repository
    description: |
      Optional: URL to your git repository. Use the https syntax for public
      repositories, use git@ syntax for private repositories.
    type: string
    default: ''

  url:
    label: Site Domain
    description: URL for site
    type: string
    default: 'example.com'

  deploy_key:
    label: Git Deploy Key
    description: |
      Optional: If you specified a private repository, provide your private
      deploy key here.
    type: string
    default: ''

  destination:
    label: Site Path
    description: Path to setup your application on your servers.
    default: /var/www/vhosts/application
    type: string

  public:
    label: Public Directory
    description: |
      The public facing directory of your application relative to the
      destination.
    type: string
    default: /

  http_port:
    label: HTTP Port
    description: HTTP Port
    type: string
    default: "80"

  https_port:
    label: HTTPS Port
    description: HTTPS Port
    type: string
    default: "443"

  memcached_size:
    label: Memcached Memory Limit
    description: Memcached memory size limit
    type: number
    default: 128

resources:

  wait_condition:
    type: OS::Heat::SwiftSignal
    properties:
      handle: { get_resource: wait_condition_handle }
      timeout: 1800

  wait_condition_handle:
    type: OS::Heat::SwiftSignalHandle

  php_server:
    type: "OS::Nova::Server"
    properties:
      name: { get_param: server_hostname }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: ssh_keypair_name }
      metadata:
        rax-heat: { get_param: parent_stack_id }
      config_drive: "true"
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #cloud-config
            package_update: true
            packages:
              - git
            write_files:
            # Set salt-minion to only use local resources
              - path: /etc/salt/minion.d/local.conf
                permissions: '0644'
                content: |
                  file_client: local
                  mysql.default_file: '/etc/mysql/debian.cnf'
            # Write out Pillar top.sls
              - path: /srv/pillar/top.sls
                permissions: '0600'
                content: |
                  base:
                    '*':
                      - localhost
            # Write out State top.sls
              - path: /srv/salt/top.sls
                permissions: '0644'
                content: |
                  base:
                    '*':
                      - salt-minion
                      - apache
                      - application
                      - memcached
                      - php
            # Example Pillar Data using %value% notation
            # See example pillar data from states repository.
              - path: /srv/pillar/localhost.sls
                permissions: '0600'
                content: |
                  apache:
                    http_port: %http_port%
                    https_port: %https_port%
                    vhosts:
                      - domain: %url%
                        docroot: %destination%%public%
                  application:
                    repo: %repo%
                    revision: %rev%
                    destination: %destination%
                    packages: %packages%
                    deploy_key: %deploy_key%
                  memcached:
                    memory_limit: %memcached_size%
            # Salt Bootstrap script
              - path: /tmp/heat/salt_run.sh
                permissions: '0500'
                content: |
                  #!/bin/bash
                  # Install salt-minion using Salt Bootstrap
                  curl -L https://bootstrap.saltstack.com | sudo sh -s -- -P
                  salt-minion --versions
                  # Clone down States
                  mkdir -p /tmp/heat/states
                  git clone https://github.com/rackspace-orchestration-templates/salt-states.git /tmp/heat/states
                  cp -nr /tmp/heat/states/* /srv/salt/
                  # Run local highstate
                  salt-call --local state.highstate
                  # Open and Enable ufw
                  ufw allow %https_port%
                  ufw allow %http_port%
                  ufw allow 22
                  ufw --force enable
                  wc_notify --data-binary '{"status": "SUCCESS"}'
            runcmd:
              - /tmp/heat/salt_run.sh
          params:
            wc_notify: { get_attr: ['wait_condition_handle', 'curl_cli'] }
            "%memcached_size%": { get_param: memcached_size }
            "%destination%": { get_param: destination }
            "%deploy_key%": { get_param: deploy_key }
            "%http_port%": { get_param: http_port }
            "%https_port%": { get_param: https_port }
            "%packages%": { get_param: packages }
            "%public%": { get_param: public }
            "%repo%": { get_param: repo }
            "%rev%": { get_param: revision }
            "%url%": { get_param: url }

outputs:
  public_ip:
    description: Server IP
    value: { get_attr: [php_server, accessIPv4] }

  private_ip:
    value: { get_attr: [php_server, networks, private, 0]}
